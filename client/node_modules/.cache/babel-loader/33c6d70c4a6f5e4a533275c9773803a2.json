{"ast":null,"code":"var _jsxFileName = \"/Users/simonemesiha/Desktop/CSE316-HW3-Spring21-Solution-main/client/src/components/homescreen/Homescreen.js\";\nimport Logo from '../navbar/Logo';\nimport Login from '../modals/Login';\nimport Delete from '../modals/Delete';\nimport MainContents from '../main/MainContents';\nimport CreateAccount from '../modals/CreateAccount';\nimport NavbarOptions from '../navbar/NavbarOptions';\nimport * as mutations from '../../cache/mutations';\nimport SidebarContents from '../sidebar/SidebarContents';\nimport { GET_DB_REGIONS } from '../../cache/queries';\nimport React, { useState } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { WNavbar, WSidebar, WNavItem } from 'wt-frontend';\nimport { WLayout, WLHeader, WLMain, WLSide } from 'wt-frontend';\nimport { UpdateListField_Transaction, SortItems_Transaction, UpdateListItems_Transaction, ReorderItems_Transaction, EditItem_Transaction } from '../../utils/jsTPS';\n\nconst Homescreen = props => {\n  const keyCombination = (e, callback) => {\n    if (e.key === 'z' && e.ctrlKey) {\n      if (props.tps.hasTransactionToUndo()) {\n        tpsUndo();\n      }\n    } else if (e.key === 'y' && e.ctrlKey) {\n      if (props.tps.hasTransactionToRedo()) {\n        tpsRedo();\n      }\n    }\n  };\n\n  document.onkeydown = keyCombination;\n  const auth = props.user === null ? false : true;\n  let todolists = [];\n  let SidebarData = [];\n  const [sortRule, setSortRule] = useState('unsorted'); // 1 is ascending, -1 desc\n\n  const [activeList, setActiveList] = useState({});\n  const [showDelete, toggleShowDelete] = useState(false);\n  const [showLogin, toggleShowLogin] = useState(false);\n  const [showCreate, toggleShowCreate] = useState(false);\n  const [canUndo, setCanUndo] = useState(props.tps.hasTransactionToUndo());\n  const [canRedo, setCanRedo] = useState(props.tps.hasTransactionToRedo());\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(GET_DB_REGIONS);\n\n  if (loading) {\n    console.log(loading, 'loading');\n  }\n\n  if (error) {\n    console.log(error, 'error');\n  } // if(data) { \n  // Assign todolists \n  // \tfor(let todo of data.getAllTodos) {\n  // \t\ttodolists.push(todo)\n  // \t}\n  // \t// if a list is selected, shift it to front of todolists\n  // \tif(activeList._id) {\n  // \t\tlet selectedListIndex = todolists.findIndex(entry => entry._id === activeList._id);\n  // \t\tlet removed = todolists.splice(selectedListIndex, 1);\n  // \t\ttodolists.unshift(removed[0]);\n  // \t}\n  // \t// create data for sidebar links\n  // \tfor(let todo of todolists) {\n  // \t\tif(todo) {\n  // \t\t\tSidebarData.push({_id: todo._id, name: todo.name});\n  // \t\t}\t\n  // \t}\n  // }\n  // NOTE: might not need to be async\n\n\n  const reloadList = async () => {\n    if (activeList._id) {\n      let tempID = activeList._id;\n      let list = todolists.find(list => list._id === tempID);\n      setActiveList(list);\n    }\n  };\n\n  const loadTodoList = list => {\n    props.tps.clearAllTransactions();\n    setCanUndo(props.tps.hasTransactionToUndo());\n    setCanRedo(props.tps.hasTransactionToRedo());\n    setActiveList(list);\n  };\n\n  const mutationOptions = {\n    refetchQueries: [{\n      query: GET_DB_REGIONS\n    }],\n    awaitRefetchQueries: true,\n    onCompleted: () => reloadList()\n  };\n  const [ReorderTodoItems] = useMutation(mutations.REORDER_ITEMS, mutationOptions);\n  const [sortTodoItems] = useMutation(mutations.SORT_ITEMS, mutationOptions);\n  const [UpdateTodoItemField] = useMutation(mutations.UPDATE_ITEM_FIELD, mutationOptions);\n  const [UpdateTodolistField] = useMutation(mutations.UPDATE_TODOLIST_FIELD, mutationOptions);\n  const [DeleteTodoItem] = useMutation(mutations.DELETE_ITEM, mutationOptions);\n  const [AddTodoItem] = useMutation(mutations.ADD_ITEM, mutationOptions);\n  const [CreateMap] = useMutation(mutations.CREATE_MAP);\n  const [DeleteTodolist] = useMutation(mutations.DELETE_TODOLIST);\n\n  const tpsUndo = async () => {\n    const ret = await props.tps.undoTransaction();\n\n    if (ret) {\n      setCanUndo(props.tps.hasTransactionToUndo());\n      setCanRedo(props.tps.hasTransactionToRedo());\n    }\n  };\n\n  const tpsRedo = async () => {\n    const ret = await props.tps.doTransaction();\n\n    if (ret) {\n      setCanUndo(props.tps.hasTransactionToUndo());\n      setCanRedo(props.tps.hasTransactionToRedo());\n    }\n  };\n\n  const addItem = async () => {\n    let list = activeList;\n    const items = list.items;\n    const newItem = {\n      _id: '',\n      description: 'No Description',\n      due_date: 'No Date',\n      assigned_to: 'No One',\n      completed: false\n    };\n    let opcode = 1;\n    let itemID = newItem._id;\n    let listID = activeList._id;\n    let transaction = new UpdateListItems_Transaction(listID, itemID, newItem, opcode, AddTodoItem, DeleteTodoItem);\n    props.tps.addTransaction(transaction);\n    tpsRedo();\n  };\n\n  const deleteItem = async (item, index) => {\n    let listID = activeList._id;\n    let itemID = item._id;\n    let opcode = 0;\n    let itemToDelete = {\n      _id: item._id,\n      description: item.description,\n      due_date: item.due_date,\n      assigned_to: item.assigned_to,\n      completed: item.completed\n    };\n    let transaction = new UpdateListItems_Transaction(listID, itemID, itemToDelete, opcode, AddTodoItem, DeleteTodoItem, index);\n    props.tps.addTransaction(transaction);\n    tpsRedo();\n  };\n\n  const editItem = async (itemID, field, value, prev) => {\n    let flag = 0;\n    if (field === 'completed') flag = 1;\n    let listID = activeList._id;\n    let transaction = new EditItem_Transaction(listID, itemID, field, prev, value, flag, UpdateTodoItemField);\n    props.tps.addTransaction(transaction);\n    tpsRedo();\n  };\n\n  const reorderItem = async (itemID, dir) => {\n    let listID = activeList._id;\n    let transaction = new ReorderItems_Transaction(listID, itemID, dir, ReorderTodoItems);\n    props.tps.addTransaction(transaction);\n    tpsRedo();\n  };\n\n  const createNewList = async () => {\n    let list = {\n      _id: '',\n      name: 'dkfasf',\n      subregion: [],\n      capital: 'dfas',\n      leader: 'dfa',\n      flag: 'df',\n      landmarks: [],\n      isitmap: true,\n      owner: 'a'\n    };\n    const {\n      data\n    } = await Cre({\n      variables: {\n        todolist: list\n      },\n      refetchQueries: [{\n        query: GET_DB_REGIONS\n      }]\n    });\n\n    if (data) {\n      loadTodoList(data.addTodolist);\n    }\n  };\n\n  const deleteList = async _id => {\n    DeleteTodolist({\n      variables: {\n        _id: _id\n      },\n      refetchQueries: [{\n        query: GET_DB_REGIONS\n      }]\n    });\n    loadTodoList({});\n  };\n\n  const updateListField = async (_id, field, value, prev) => {\n    let transaction = new UpdateListField_Transaction(_id, field, prev, value, UpdateTodolistField);\n    props.tps.addTransaction(transaction);\n    tpsRedo();\n  };\n\n  const handleSetActive = _id => {\n    const selectedList = todolists.find(todo => todo._id === _id);\n    loadTodoList(selectedList);\n  };\n\n  const setShowLogin = () => {\n    toggleShowDelete(false);\n    toggleShowCreate(false);\n    toggleShowLogin(!showLogin);\n  };\n\n  const setShowCreate = () => {\n    toggleShowDelete(false);\n    toggleShowLogin(false);\n    toggleShowCreate(!showCreate);\n  };\n\n  const setShowDelete = () => {\n    toggleShowCreate(false);\n    toggleShowLogin(false);\n    toggleShowDelete(!showDelete);\n  };\n\n  const sort = criteria => {\n    let prevSortRule = sortRule;\n    setSortRule(criteria);\n    let transaction = new SortItems_Transaction(activeList._id, criteria, prevSortRule, sortTodoItems);\n    console.log(transaction);\n    props.tps.addTransaction(transaction);\n    tpsRedo();\n  };\n\n  return /*#__PURE__*/React.createElement(WLayout, {\n    wLayout: \"header-lside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(WLHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(WNavbar, {\n    color: \"colored\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(WNavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 8\n    }\n  }))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(NavbarOptions, {\n    fetchUser: props.fetchUser,\n    auth: auth,\n    setShowCreate: setShowCreate,\n    setShowLogin: setShowLogin,\n    reloadTodos: refetch,\n    setActiveList: loadTodoList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }\n  })))), /*#__PURE__*/React.createElement(WLSide, {\n    side: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(WSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 5\n    }\n  }, activeList ? /*#__PURE__*/React.createElement(SidebarContents, {\n    listIDs: SidebarData,\n    activeid: activeList._id,\n    auth: auth,\n    handleSetActive: handleSetActive,\n    createNewList: createNewList,\n    updateListField: updateListField,\n    key: activeList._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 8\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(WLMain, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 4\n    }\n  }, activeList ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(MainContents, {\n    addItem: addItem,\n    deleteItem: deleteItem,\n    editItem: editItem,\n    reorderItem: reorderItem,\n    setShowDelete: setShowDelete,\n    undo: tpsUndo,\n    redo: tpsRedo,\n    activeList: activeList,\n    setActiveList: loadTodoList,\n    canUndo: canUndo,\n    canRedo: canRedo,\n    sort: sort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 8\n    }\n  })), showDelete && /*#__PURE__*/React.createElement(Delete, {\n    deleteList: deleteList,\n    activeid: activeList._id,\n    setShowDelete: setShowDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 20\n    }\n  }), showCreate && /*#__PURE__*/React.createElement(CreateAccount, {\n    fetchUser: props.fetchUser,\n    setShowCreate: setShowCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 20\n    }\n  }), showLogin && /*#__PURE__*/React.createElement(Login, {\n    fetchUser: props.fetchUser,\n    reloadTodos: refetch,\n    setShowLogin: setShowLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 19\n    }\n  }));\n};\n\nexport default Homescreen; //s","map":{"version":3,"sources":["/Users/simonemesiha/Desktop/CSE316-HW3-Spring21-Solution-main/client/src/components/homescreen/Homescreen.js"],"names":["Logo","Login","Delete","MainContents","CreateAccount","NavbarOptions","mutations","SidebarContents","GET_DB_REGIONS","React","useState","useMutation","useQuery","WNavbar","WSidebar","WNavItem","WLayout","WLHeader","WLMain","WLSide","UpdateListField_Transaction","SortItems_Transaction","UpdateListItems_Transaction","ReorderItems_Transaction","EditItem_Transaction","Homescreen","props","keyCombination","e","callback","key","ctrlKey","tps","hasTransactionToUndo","tpsUndo","hasTransactionToRedo","tpsRedo","document","onkeydown","auth","user","todolists","SidebarData","sortRule","setSortRule","activeList","setActiveList","showDelete","toggleShowDelete","showLogin","toggleShowLogin","showCreate","toggleShowCreate","canUndo","setCanUndo","canRedo","setCanRedo","loading","error","data","refetch","console","log","reloadList","_id","tempID","list","find","loadTodoList","clearAllTransactions","mutationOptions","refetchQueries","query","awaitRefetchQueries","onCompleted","ReorderTodoItems","REORDER_ITEMS","sortTodoItems","SORT_ITEMS","UpdateTodoItemField","UPDATE_ITEM_FIELD","UpdateTodolistField","UPDATE_TODOLIST_FIELD","DeleteTodoItem","DELETE_ITEM","AddTodoItem","ADD_ITEM","CreateMap","CREATE_MAP","DeleteTodolist","DELETE_TODOLIST","ret","undoTransaction","doTransaction","addItem","items","newItem","description","due_date","assigned_to","completed","opcode","itemID","listID","transaction","addTransaction","deleteItem","item","index","itemToDelete","editItem","field","value","prev","flag","reorderItem","dir","createNewList","name","subregion","capital","leader","landmarks","isitmap","owner","Cre","variables","todolist","addTodolist","deleteList","updateListField","handleSetActive","selectedList","todo","setShowLogin","setShowCreate","setShowDelete","sort","criteria","prevSortRule","fetchUser"],"mappings":"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","sourcesContent":["import Logo \t\t\t\t\t\t\tfrom '../navbar/Logo';\nimport Login \t\t\t\t\t\t\tfrom '../modals/Login';\nimport Delete \t\t\t\t\t\t\tfrom '../modals/Delete';\nimport MainContents \t\t\t\t\tfrom '../main/MainContents';\nimport CreateAccount \t\t\t\t\tfrom '../modals/CreateAccount';\nimport NavbarOptions \t\t\t\t\tfrom '../navbar/NavbarOptions';\nimport * as mutations \t\t\t\t\tfrom '../../cache/mutations';\nimport SidebarContents \t\t\t\t\tfrom '../sidebar/SidebarContents';\nimport { GET_DB_REGIONS } \t\t\t\tfrom '../../cache/queries';\nimport React, { useState } \t\t\t\tfrom 'react';\nimport { useMutation, useQuery } \t\tfrom '@apollo/client';\nimport { WNavbar, WSidebar, WNavItem } \tfrom 'wt-frontend';\nimport { WLayout, WLHeader, WLMain, WLSide } from 'wt-frontend';\nimport { UpdateListField_Transaction, \n\tSortItems_Transaction,\n\tUpdateListItems_Transaction, \n\tReorderItems_Transaction, \n\tEditItem_Transaction } \t\t\t\tfrom '../../utils/jsTPS';\n\nconst Homescreen = (props) => {\n\n\tconst keyCombination = (e, callback) => {\n\t\tif(e.key === 'z' && e.ctrlKey) {\n\t\t\tif(props.tps.hasTransactionToUndo()) {\n\t\t\t\ttpsUndo();\n\t\t\t}\n\t\t}\n\t\telse if (e.key === 'y' && e.ctrlKey) { \n\t\t\tif(props.tps.hasTransactionToRedo()) {\n\t\t\t\ttpsRedo();\n\t\t\t}\n\t\t}\n\t}\n\tdocument.onkeydown = keyCombination;\n\n\tconst auth = props.user === null ? false : true;\n\tlet todolists \t= [];\n\tlet SidebarData = [];\n\tconst [sortRule, setSortRule] = useState('unsorted'); // 1 is ascending, -1 desc\n\tconst [activeList, setActiveList] \t\t= useState({});\n\tconst [showDelete, toggleShowDelete] \t= useState(false);\n\tconst [showLogin, toggleShowLogin] \t\t= useState(false);\n\tconst [showCreate, toggleShowCreate] \t= useState(false);\n\tconst [canUndo, setCanUndo] = useState(props.tps.hasTransactionToUndo());\n\tconst [canRedo, setCanRedo] = useState(props.tps.hasTransactionToRedo());\n\n\n\n\tconst { loading, error, data, refetch } = useQuery(GET_DB_REGIONS);\n\n\tif(loading) { console.log(loading, 'loading'); }\n\tif(error) { console.log(error, 'error'); }\n\t// if(data) { \n\t\t// Assign todolists \n\t// \tfor(let todo of data.getAllTodos) {\n\t// \t\ttodolists.push(todo)\n\t// \t}\n\t// \t// if a list is selected, shift it to front of todolists\n\t// \tif(activeList._id) {\n\t// \t\tlet selectedListIndex = todolists.findIndex(entry => entry._id === activeList._id);\n\t// \t\tlet removed = todolists.splice(selectedListIndex, 1);\n\t// \t\ttodolists.unshift(removed[0]);\n\t// \t}\n\t// \t// create data for sidebar links\n\t// \tfor(let todo of todolists) {\n\t// \t\tif(todo) {\n\t// \t\t\tSidebarData.push({_id: todo._id, name: todo.name});\n\t// \t\t}\t\n\t// \t}\n\t// }\n\n\n\t\n\t// NOTE: might not need to be async\n\tconst reloadList = async () => {\n\t\tif (activeList._id) {\n\t\t\tlet tempID = activeList._id;\n\t\t\tlet list = todolists.find(list => list._id === tempID);\n\t\t\tsetActiveList(list);\n\t\t}\n\t}\n\n\tconst loadTodoList = (list) => {\n\t\tprops.tps.clearAllTransactions();\n\t\tsetCanUndo(props.tps.hasTransactionToUndo());\n\t\tsetCanRedo(props.tps.hasTransactionToRedo());\n\t\tsetActiveList(list);\n\n\t}\n\n\tconst mutationOptions = {\n\t\trefetchQueries: [{ query: GET_DB_REGIONS }], \n\t\tawaitRefetchQueries: true,\n\t\tonCompleted: () => reloadList()\n\t}\n\n\tconst [ReorderTodoItems] \t\t= useMutation(mutations.REORDER_ITEMS, mutationOptions);\n\tconst [sortTodoItems] \t\t= useMutation(mutations.SORT_ITEMS, mutationOptions);\n\tconst [UpdateTodoItemField] \t= useMutation(mutations.UPDATE_ITEM_FIELD, mutationOptions);\n\tconst [UpdateTodolistField] \t= useMutation(mutations.UPDATE_TODOLIST_FIELD, mutationOptions);\n\tconst [DeleteTodoItem] \t\t\t= useMutation(mutations.DELETE_ITEM, mutationOptions);\n\tconst [AddTodoItem] \t\t\t= useMutation(mutations.ADD_ITEM, mutationOptions);\n\tconst [CreateMap] \t\t\t= useMutation(mutations.CREATE_MAP);\n\tconst [DeleteTodolist] \t\t\t= useMutation(mutations.DELETE_TODOLIST);\n\n\n\n\t\n\tconst tpsUndo = async () => {\n\t\tconst ret = await props.tps.undoTransaction();\n\t\tif(ret) {\n\t\t\tsetCanUndo(props.tps.hasTransactionToUndo());\n\t\t\tsetCanRedo(props.tps.hasTransactionToRedo());\n\t\t}\n\t}\n\n\tconst tpsRedo = async () => {\n\t\tconst ret = await props.tps.doTransaction();\n\t\tif(ret) {\n\t\t\tsetCanUndo(props.tps.hasTransactionToUndo());\n\t\t\tsetCanRedo(props.tps.hasTransactionToRedo());\n\t\t}\n\t}\n\n\tconst addItem = async () => {\n\t\tlet list = activeList;\n\t\tconst items = list.items;\n\t\tconst newItem = {\n\t\t\t_id: '',\n\t\t\tdescription: 'No Description',\n\t\t\tdue_date: 'No Date',\n\t\t\tassigned_to: 'No One',\n\t\t\tcompleted: false\n\t\t};\n\t\tlet opcode = 1;\n\t\tlet itemID = newItem._id;\n\t\tlet listID = activeList._id;\n\t\tlet transaction = new UpdateListItems_Transaction(listID, itemID, newItem, opcode, AddTodoItem, DeleteTodoItem);\n\t\tprops.tps.addTransaction(transaction);\n\t\ttpsRedo();\n\t};\n\n\tconst deleteItem = async (item, index) => {\n\t\tlet listID = activeList._id;\n\t\tlet itemID = item._id;\n\t\tlet opcode = 0;\n\t\tlet itemToDelete = {\n\t\t\t_id: item._id,\n\t\t\tdescription: item.description,\n\t\t\tdue_date: item.due_date,\n\t\t\tassigned_to: item.assigned_to,\n\t\t\tcompleted: item.completed\n\t\t}\n\t\tlet transaction = new UpdateListItems_Transaction(listID, itemID, itemToDelete, opcode, AddTodoItem, DeleteTodoItem, index);\n\t\tprops.tps.addTransaction(transaction);\n\t\ttpsRedo();\n\n\t};\n\n\tconst editItem = async (itemID, field, value, prev) => {\n\t\tlet flag = 0;\n\t\tif (field === 'completed') flag = 1;\n\t\tlet listID = activeList._id;\n\t\tlet transaction = new EditItem_Transaction(listID, itemID, field, prev, value, flag, UpdateTodoItemField);\n\t\tprops.tps.addTransaction(transaction);\n\t\ttpsRedo();\n\n\t};\n\n\tconst reorderItem = async (itemID, dir) => {\n\t\tlet listID = activeList._id;\n\t\tlet transaction = new ReorderItems_Transaction(listID, itemID, dir, ReorderTodoItems);\n\t\tprops.tps.addTransaction(transaction);\n\t\ttpsRedo();\n\n\t};\n\n\tconst createNewList = async () => {\n\t\tlet list = {\n\t\t\t_id: '',\n\t\t\t\tname: 'dkfasf',\n\t\t\t\tsubregion: [],\n\t\t\t\tcapital: 'dfas',\n\t\t\t\tleader: 'dfa',\n\t\t\t\tflag: 'df',\n\t\t\t\tlandmarks: [],\n\t\t\t\tisitmap : true,\n\t\t\t\towner : 'a' \n\t\t}\n\t\tconst { data } = await Cre({ variables: { todolist: list }, refetchQueries: [{ query: GET_DB_REGIONS }] });\n\t\tif(data) {\n\t\t\tloadTodoList(data.addTodolist);\n\t\t} \n\t\t\n\t};\n\tconst deleteList = async (_id) => {\n\t\tDeleteTodolist({ variables: { _id: _id }, refetchQueries: [{ query: GET_DB_REGIONS }] });\n\t\tloadTodoList({});\n\t};\n\n\tconst updateListField = async (_id, field, value, prev) => {\n\t\tlet transaction = new UpdateListField_Transaction(_id, field, prev, value, UpdateTodolistField);\n\t\tprops.tps.addTransaction(transaction);\n\t\ttpsRedo();\n\n\t};\n\n\tconst handleSetActive = (_id) => {\n\t\tconst selectedList = todolists.find(todo => todo._id === _id);\n\t\tloadTodoList(selectedList);\n\t};\n\n\tconst setShowLogin = () => {\n\t\ttoggleShowDelete(false);\n\t\ttoggleShowCreate(false);\n\t\ttoggleShowLogin(!showLogin);\n\t};\n\n\tconst setShowCreate = () => {\n\t\ttoggleShowDelete(false);\n\t\ttoggleShowLogin(false);\n\t\ttoggleShowCreate(!showCreate);\n\t};\n\n\tconst setShowDelete = () => {\n\t\ttoggleShowCreate(false);\n\t\ttoggleShowLogin(false);\n\t\ttoggleShowDelete(!showDelete)\n\t};\n\t\n\tconst sort = (criteria) => {\n\t\tlet prevSortRule = sortRule;\n\t\tsetSortRule(criteria);\n\t\tlet transaction = new SortItems_Transaction(activeList._id, criteria, prevSortRule, sortTodoItems);\n\t\tconsole.log(transaction)\n\t\tprops.tps.addTransaction(transaction);\n\t\ttpsRedo();\n\t\t\n\t}\n\n\treturn (\n\t\t<WLayout wLayout=\"header-lside\">\n\t\t\t<WLHeader>\n\t\t\t\t<WNavbar color=\"colored\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<WNavItem>\n\t\t\t\t\t\t\t<Logo className='logo' />\n\t\t\t\t\t\t</WNavItem>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<NavbarOptions\n\t\t\t\t\t\t\tfetchUser={props.fetchUser} \tauth={auth} \n\t\t\t\t\t\t\tsetShowCreate={setShowCreate} \tsetShowLogin={setShowLogin}\n\t\t\t\t\t\t\treloadTodos={refetch} \t\t\tsetActiveList={loadTodoList}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ul>\n\t\t\t\t</WNavbar>\n\t\t\t</WLHeader>\n\n\t\t\t<WLSide side=\"left\">\n\t\t\t\t<WSidebar>\n\t\t\t\t\t{\n\t\t\t\t\t\tactiveList ? \n\t\t\t\t\t\t\t<SidebarContents\n\t\t\t\t\t\t\t\tlistIDs={SidebarData} \t\t\t\tactiveid={activeList._id} auth={auth}\n\t\t\t\t\t\t\t\thandleSetActive={handleSetActive} \tcreateNewList={createNewList}\n\t\t\t\t\t\t\t\tupdateListField={updateListField} \tkey={activeList._id}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<></>\n\t\t\t\t\t}\n\t\t\t\t</WSidebar>\n\t\t\t</WLSide>\n\t\t\t<WLMain>\n\t\t\t\t{\n\t\t\t\t\tactiveList ? \n\t\t\t\t\t\n\t\t\t\t\t\t\t<div className=\"container-secondary\">\n\t\t\t\t\t\t\t\t<MainContents\n\t\t\t\t\t\t\t\t\taddItem={addItem} \t\t\t\tdeleteItem={deleteItem}\n\t\t\t\t\t\t\t\t\teditItem={editItem} \t\t\treorderItem={reorderItem}\n\t\t\t\t\t\t\t\t\tsetShowDelete={setShowDelete} \tundo={tpsUndo} redo={tpsRedo}\n\t\t\t\t\t\t\t\t\tactiveList={activeList} \t\tsetActiveList={loadTodoList}\n\t\t\t\t\t\t\t\t\tcanUndo={canUndo} \t\t\t\tcanRedo={canRedo}\n\t\t\t\t\t\t\t\t\tsort={sort}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<div className=\"container-secondary\" />\n\t\t\t\t}\n\n\t\t\t</WLMain>\n\n\t\t\t{\n\t\t\t\tshowDelete && (<Delete deleteList={deleteList} activeid={activeList._id} setShowDelete={setShowDelete} />)\n\t\t\t}\n\n\t\t\t{\n\t\t\t\tshowCreate && (<CreateAccount fetchUser={props.fetchUser} setShowCreate={setShowCreate} />)\n\t\t\t}\n\n\t\t\t{\n\t\t\t\tshowLogin && (<Login fetchUser={props.fetchUser} reloadTodos={refetch}setShowLogin={setShowLogin} />)\n\t\t\t}\n\n\t\t</WLayout>\n\t);\n};\n\nexport default Homescreen;\n//s"]},"metadata":{},"sourceType":"module"}